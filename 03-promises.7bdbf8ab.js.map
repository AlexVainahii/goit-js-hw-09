{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,IAAIC,EAAiB,GACrB,MAAMC,EAAUC,SAASC,cAAc,SAkBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OADAC,QAAQC,IAAIN,EAAUC,GACf,IAAIM,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLR,EACFM,EAAQ,C,SAAER,E,MAAUC,IAEpBQ,EAAO,C,SAAET,E,MAAUC,MAEpBA,MA3BPL,EAAQe,iBAAiB,SAASC,IAChC,MAAMC,KAAEA,EAAIC,MAAEA,GAAUF,EAAMG,OAC9BpB,EAAekB,GAAQC,KAazBlB,EAAQe,iBAAiB,UAVzB,SAAoBC,GAClBA,EAAMI,iBACN,MAAMf,MAAEA,EAAKgB,KAAEA,EAAIC,OAAEA,GAAWvB,EAChC,IAAK,IAAIwB,EAAI,EAAGA,EAAIC,OAAOF,GAASC,IAClCpB,EAAcoB,EAAI,EAAGC,OAAOnB,GAASmB,OAAOH,GAAQE,GACjDE,KAAKC,GACLC,MAAMC,MAoBb,MAAMF,EAAY,EAACtB,SAAEA,EAAQC,MAAEA,MAC7BI,QAAQC,IAAIN,EAAUC,GACtBwB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqB3B,QAAiBC,QAE1DuB,EAAU,EAACxB,SAAEA,EAAQC,MAAEA,MAC3BI,QAAQC,IAAIN,EAAUC,GACtBwB,EAAAhC,GAASiC,OAAOE,QAAQ,sBAAoB5B,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nlet promiseOptions = {};\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('input', event => {\n  const { name, value } = event.target;\n  promiseOptions[name] = value;\n});\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = promiseOptions;\n  for (let i = 0; i < Number(amount); i++) {\n    createPromise(i + 1, Number(delay) + Number(step) * i)\n      .then(onSuccess)\n      .catch(onErorr);\n  }\n}\n\nformRef.addEventListener('submit', formSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(position, delay);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSuccess = ({ position, delay }) => {\n  console.log(position, delay);\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\nconst onErorr = ({ position, delay }) => {\n  console.log(position, delay);\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$promiseOptions","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","addEventListener","event","name","value","target","preventDefault","step","amount","i","Number","then","$47d4ff9957288465$var$onSuccess","catch","$47d4ff9957288465$var$onErorr","$parcel$interopDefault","Notify","success","failure"],"version":3,"file":"03-promises.7bdbf8ab.js.map"}